swagger: "2.0"
################################################################################
#                              API Information                                 #
################################################################################
# Provides metadata about the API.
info:
  version: v1
  title: CAF Audit Management Service
  description: |
    The CAF Audit Managament Service will facilitate the registration of both
    application defined Audit Event Definition file and new tenants.

    The applications endpoint should be used to register the Audit Event Definition
    file defined for each application. The XML along with the application mapping
    will be stored in the Vertica database.

    The tenants endpoint should be used to add new tenants. One or more
    applications can be specified when adding a new tenant. This will result
    in application specific storage tables being created under tenant specific
    schemas in the Vertica database.

    ### Audit Event Definition File

    Applications will define audit events that will occur in the system in an
    Audit Event Definition file. A sample XML file is included [here.](Getting-Started)


    `AuditedApplication` is the root element. `ApplicationId` identifies the name
    of the application that the audit event type is associated with. The database
    table created by the tenants API endpoint will derive it's name from this
    `ApplicationId` and will be created in a database schema named after the tenant.
    For each audit event defined, `TypeId` is a string identifier for the
    particular event (e.g. viewDocument) and `CategoryId` is a string identifier
    for the category of event. A list of parameter elements are then defined for
    each audit event. This includes the name of the parameter, the type (i.e.
    string, short, int, long, float, double, boolean or date), description and
    an optional `ColumnName` element which identifies an alternative database
    column to be used for storage in the event that multiple audit events
    comprise of parameters with the same name. The column names created by the
    API for audit event parameters is taken from either the `ColumnName` or `Name`.
    Each is also prefixed with 'eventParam'.

basePath: /caf-audit-management/v1
produces:
  - application/json
################################################################################
#                                   Paths                                      #
################################################################################
# The available paths and operations for the API.
paths:
  /applications:
    post:
      description: Used to register application specific Audit Event Definition file.
      tags:
        - Applications
      summary: Adds a new application
      consumes:
        - multipart/form-data
      parameters:
        - name: file
          type: file
          in: formData
          required: true
          description: XML file which defines the audit events in use by the application
      responses:
        200:
          description: Ok
        400:
          description: Bad Request (missing database connection properties or unexpected/invalid XML)
        500:
          description: Internal server error
  /tenants:
    post:
      description: Used to register and create the Vertica database schema for a new tenant.
      tags:
        - Tenants
      summary: Adds a new tenant
      parameters:
        - name: NewTenant
          in: body
          required: true
          description: Identifies the tenant and the application(s) that the tenant is to be registered with
          schema:
            $ref: '#/definitions/NewTenant'
      responses:
        200:
          description: Ok
        400:
          description: Bad Request (missing database connection properties or the `tenantId` parameter contains invalid characters)
        500:
          description: Internal server error
  /tenants/{tenantId}/updatePartitionCount:
    post:
      description: Must be called after extra partitions have been added to a topic in Kafka so that the new partitions are consumed.
      tags:
        - Tenants
      summary: Keeps Vertica topic configuration and Kafka topic partitions consistent
      parameters:
        - name: tenantId
          type: string
          in: path
          required: true
          description: Identifies the tenant
        - name: applicationId
          type: string
          in: query
          required: true
          description: Identifies the application
      responses:
        200:
          description: Ok
        400:
          description: Bad Request (missing database connection properties or the `tenantId` parameter contains invalid characters)
        404:
          description: Not Found (`tenantId` or `applicationId` not found)
        500:
          description: Internal server error
definitions:
  NewTenant:
    required:
      - tenantId
      - application
    properties:
      tenantId:
        type: string
      application:
        type: array
        items:
          type: string
