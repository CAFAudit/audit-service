<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015-2018 Micro Focus or one of its affiliates.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.cafaudit</groupId>
    <artifactId>caf-audit-service-container</artifactId>
    <packaging>pom</packaging>

    <parent>
        <groupId>com.github.cafaudit</groupId>
        <artifactId>audit-service-aggregator</artifactId>
        <version>3.4.0-SNAPSHOT</version>
    </parent>

    <properties>
        <webserviceWarName>caf-audit-service</webserviceWarName>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.github.cafaudit</groupId>
            <artifactId>caf-audit-service</artifactId>
            <type>war</type>
        </dependency>
        <!-- Auditing Implementations -->
        <dependency>
            <groupId>com.github.cafaudit</groupId>
            <artifactId>caf-audit-binding-elasticsearch</artifactId>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch.client</groupId>
            <artifactId>elasticsearch-rest-high-level-client</artifactId>
        </dependency>
        <!-- Elasticsearch uses Log4j 2 for logging -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <!-- End of Auditing Implementations -->
        <dependency>
            <groupId>com.github.cafaudit</groupId>
            <artifactId>caf-audit-service-ui</artifactId>
            <type>war</type>
        </dependency>
        
        <!-- Testing dependencies -->
        <dependency>
            <groupId>com.github.cafaudit</groupId>
            <artifactId>caf-audit-binding-webservice</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.cafaudit</groupId>
            <artifactId>caf-audit-service-testing-auditlog</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.cafaudit</groupId>
            <artifactId>caf-audit-service-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>integration-test</id>
            <activation>
                <property>
                    <name>RE_BUILD_TYPE</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${fabric8.docker.maven.version}</version>
                        <executions>
                            <execution>
                                <id>start-testing-containers</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <skip>false</skip>
                                    <image>audit-service,config,elasticsearch</image>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-testing-containers</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <skip>false</skip>
                                    <image>audit-service,config,elasticsearch</image>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>use-default-fixed-ports</id>
            <properties>
                <webservice.adminport>25080</webservice.adminport>
                <elasticsearch.http.port>9200</elasticsearch.http.port>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <!-- Compile test sources. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <executions>
                    <execution>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <testCompilerArgument>-parameters</testCompilerArgument>
                            <source>1.8</source>
                            <target>1.8</target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Run integration tests. -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.version}</version>
                <executions>
                    <execution>
                        <id>webservice-Docker</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemPropertyVariables>
                        <docker.host.address>${docker.host.address}</docker.host.address>
                        <webservice.adminport>${webservice.adminport}</webservice.adminport>
                        <elasticsearch.http.port>${elasticsearch.http.port}</elasticsearch.http.port>
                    </systemPropertyVariables>
                    <environmentVariables>
                        <CAF_ELASTIC_HOST_VALUES>${docker.host.address}</CAF_ELASTIC_HOST_VALUES>
                        <CAF_ELASTIC_PORT_VALUE>${elasticsearch.http.port}</CAF_ELASTIC_PORT_VALUE>
                        <webserviceurl>http://${docker.host.address}:${webservice.adminport}/${webserviceWarName}/v1</webserviceurl>
                        <webserviceurlhttps>https://${docker.host.address}:${webservice.https.adminport}/${webserviceWarName}/v1</webserviceurlhttps>
                    </environmentVariables>
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${fabric8.docker.maven.version}</version>
                <executions>
                    <execution>
                        <id>build-docker-container</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <skip>false</skip>
                            <image>audit-service,config</image>
                        </configuration>
                    </execution>
                    <execution>
                        <id>upload-docker-container</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <filter>audit-service</filter>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <verbose>true</verbose>
                    <autoPull>on</autoPull>
                    <logDate>default</logDate>
                    <watchInterval>500</watchInterval>
                    <images>
                        <!--Build image for test keystore-->
                        <image>
                            <alias>keystore</alias>
                            <name>${project.artifactId}-keystore:${project.version}</name>
                            <build>
                                <from>cafapi/opensuse-jre8:1</from>
                                <runCmds>
                                    <runCmd>mkdir /test-keystore</runCmd>
                                    <runCmd>keytool -genkey -noprompt -alias tomcat -dname "CN=myname, OU=myorganisational.unit, O=myorganisation, L=mycity, S=myprovince, C=GB" -keystore /test-keystore/tomcat.keystore -storepass changeit -keypass changeit -keyalg RSA</runCmd>
                                    <runCmd>keytool -importkeystore -srckeystore /test-keystore/tomcat.keystore -srcstorepass changeit -destkeystore /test-keystore/tomcat.keystore -deststoretype pkcs12</runCmd>
                                </runCmds>
                                <volumes>
                                    <volume>/test-keystore</volume>
                                </volumes>
                            </build>
                        </image>
                        <image>
                            <alias>audit-service</alias>
                            <name>${dockerCafAuditOrg}audit-service${dockerProjectVersion}</name>
                            <build>
                                <from>cafapi/opensuse-tomcat:3</from>
                                <labels>
                                    <Build.Number>${project.version}</Build.Number>
                                    <Build.Date>${maven.build.timestamp}</Build.Date>
                                    <Git.Repo>${gitRepo}</Git.Repo>
                                    <Git.Branch>${git.branch}</Git.Branch>
                                    <Git.Commit>${git.revision}</Git.Commit>
                                </labels>
                                <env>
                                    <CAF_AUDIT_MODE>elasticsearch</CAF_AUDIT_MODE>
                                    <CAF_ELASTIC_HOST_VALUES>elasticsearch</CAF_ELASTIC_HOST_VALUES>
                                    <CAF_ELASTIC_PORT_VALUE>9200</CAF_ELASTIC_PORT_VALUE>
                                    <CAF_ELASTIC_NUMBER_OF_SHARDS>5</CAF_ELASTIC_NUMBER_OF_SHARDS>
                                    <CAF_ELASTIC_NUMBER_OF_REPLICAS>1</CAF_ELASTIC_NUMBER_OF_REPLICAS>
                                    <CAF_LOG_LEVEL>DEBUG</CAF_LOG_LEVEL>
                                </env>
                                <healthCheck>
                                    <mode>none</mode>
                                </healthCheck>
                                <assembly>
                                    <basedir>/usr/share/tomcat</basedir>
                                    <mode>tar</mode>
                                    <inline>
                                        <dependencySets>
                                            <dependencySet>
                                                <outputDirectory>webapps/${webserviceWarName}</outputDirectory>
                                                <includes>
                                                    <include>com.github.cafaudit:caf-audit-service</include>
                                                </includes>
                                                <unpack>true</unpack>
                                                <useProjectArtifact>false</useProjectArtifact>
                                            </dependencySet>
                                            <!-- Including the swagger ui in the container image. -->
                                            <dependencySet>
                                                <outputDirectory>webapps/caf-audit-service-ui</outputDirectory>
                                                <includes>
                                                    <include>com.github.cafaudit:caf-audit-service-ui</include>
                                                </includes>
                                                <unpack>true</unpack>
                                                <useProjectArtifact>false</useProjectArtifact>
                                            </dependencySet>
                                            <dependencySet>
                                                <outputDirectory>webapps/${webserviceWarName}/WEB-INF/lib</outputDirectory>
                                                <excludes>
                                                    <exclude>com.github.cafaudit:caf-audit-service</exclude>
                                                    <exclude>com.github.cafaudit:caf-audit-service-ui</exclude>
                                                </excludes>
                                                <useProjectArtifact>false</useProjectArtifact>
                                            </dependencySet>
                                        </dependencySets>
                                    </inline>
                                </assembly>
                            </build>
                            <run>
                                <ports>
                                    <port>${webservice.adminport}:8080</port>
                                    <port>${webservice.https.adminport}:8443</port>
                                </ports>
                                <env>
                                    <CAF_ELASTIC_HOST_VALUES>elasticsearch</CAF_ELASTIC_HOST_VALUES>
                                    <CAF_ELASTIC_PORT_VALUE>9200</CAF_ELASTIC_PORT_VALUE>
                                    <DOCKER_HOST>http://172.17.0.1:2375</DOCKER_HOST>
                                    <SSL_TOMCAT_CA_CERT_LOCATION>/test-keystore/tomcat.keystore</SSL_TOMCAT_CA_CERT_LOCATION>
                                </env>
                                <volumes>
                                    <from>
                                        <image>keystore</image>
                                    </from>
                                </volumes>
                                <links>
                                    <link>elasticsearch</link>
                                </links>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                                <wait>
                                    <http>
                                        <url>
                                            http://${docker.host.address}:${webservice.adminport}
                                        </url>
                                    </http>
                                    <time>120000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                            </run>
                        </image>

                        <!-- elasticsearch image for running integration tests-->
                        <image>
                            <alias>elasticsearch</alias>
                            <name>docker.elastic.co/elasticsearch/elasticsearch:7.2.0</name>
                            <run>
                                <hostname>elasticsearch</hostname>
                                <namingStrategy>alias</namingStrategy>
                                <ports>
                                    <port>${elasticsearch.http.port}:9200</port>
                                </ports>
                                <env>
                                    <xpack.security.enabled>false</xpack.security.enabled>
                                    <discovery.type>single-node</discovery.type>
                                </env>
                                <wait>
                                    <log>Elasticsearch startup complete</log>
                                    <http>
                                        <url>http://${docker.host.address}:${elasticsearch.http.port}</url>
                                    </http>
                                    <time>300000</time>
                                    <shutdown>500</shutdown>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                </log>
                            </run>
                        </image>

                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
